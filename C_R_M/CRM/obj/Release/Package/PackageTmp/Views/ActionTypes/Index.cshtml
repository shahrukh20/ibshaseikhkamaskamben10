

<form id="indexForm" action="/SourceTypes/Index" method="post">
    <h1>Action Type Listing</h1>
    <div id="content">

        <div class="box box-danger">
            <div class="box-header with-border">

                <div id="content">
                    <div class="addbutton right">
                        <a href="@Url.Action("Create", "ActionTypes")"> <input type="button" class="btn btn-danger" value="Add Action Type" /></a>


                    </div>
                    <div class="form-horizontal">
                        <div id="jsGrid"></div>
                    </div>
                </div>
            </div>
            </div>
        </div>
              
</form>

<script type="text/javascript">



    $(document).ready(function () {

        //Float Value
        function DecimalField(config) {
            jsGrid.fields.number.call(this, config);
        }

        DecimalField.prototype = new jsGrid.fields.number({

            filterValue: function () {
                return this.filterControl.val()
                    ? parseFloat(this.filterControl.val() || 0, 10)
                    : undefined;
            },

            insertValue: function () {
                return this.insertControl.val()
                    ? parseFloat(this.insertControl.val() || 0, 10)
                    : undefined;
            },

            editValue: function () {
                return this.editControl.val()
                    ? parseFloat(this.editControl.val() || 0, 10)
                    : undefined;
            }
        });

        jsGrid.fields.decimal = jsGrid.DecimalField = DecimalField;
        //End Float Value


        var originalFilterTemplate = jsGrid.fields.text.prototype.filterTemplate;
        jsGrid.fields.text.prototype.filterTemplate = function () {
            var grid = this._grid;
            var $result = originalFilterTemplate.call(this);
            $result.on("keyup", function (e) {
                // TODO: add proper condition and optionally throttling to avoid too much requests
                grid.search();
            });
            return $result;
        }

        $("#jsGrid").jsGrid({
            width: "100%",
            height: "400px",
            filtering: true,
            sorting: true,
            paging: true,
            autoload: true,
            async: false,

            pageSize: 5,
            pageButtonCount: 5,

            controller: {

                loadData: function (filter) {
                    var d = $.Deferred();
                    $.ajax({
                        type: "GET",
                        async: false,
                        url: "../ActionTypes/ActionsListingAjax",
                        dataType: "JSON"
                    }).done(function (result) {
                        for (var prop in filter) {

                            //if (prop == "Score" && filter['Score'] != null) {
                            //    result = $.grep(result, function (item) {
                            //        if (item[prop] == filter[prop]) {
                            //            return item;
                            //        }
                            //    });
                            //    break;
                            //}
                            //if (prop != "Score"){
                            if (filter[prop].length > 0) {
                                result = $.grep(result, function (item) {
                                    var regexp = new RegExp(filter[prop], 'gi');
                                    if (item[prop].match(regexp)) {
                                        return item;
                                    }
                                });
                                break;
                            }
                            //}



                        }
                        d.resolve(result);
                    });
                    return d.promise();
                }
            },
            fields: [
                { name: "Action_Id", title: "Action_Id", type: "number", visible: false, align: 'center' },
                { name: "Action_Name", title: "Action Name", type: "text", width: 150, validate: "required", align: 'center', editing: false },
                { name: "Score", title: "Score", type: "text", width: 50, validate: "required", align: 'center', editing: false },
                {
                    type: 'control',
                    align: 'center',
                    itemTemplate: function (_, item) {
                        return "<a onclick =\"ReditectToViewSection(" + item.Action_Id + ");\" name='View'>View</a>&nbsp;&nbsp;&nbsp;<a onclick =\"ReditectToEditSection(" + item.Action_Id + ");\" name='Edit'>Edit</a>";
                    }, width: 20
                }
            ]

        });

    });

</script>
<script>

    function ReditectToViewSection(Action_Id) {
        var base_url = window.location.origin;
        window.location = base_url + "/ActionTypes/Details/" + Action_Id;
    }

    function ReditectToEditSection(Action_Id) {
        var base_url = window.location.origin;
        window.location = base_url + "/ActionTypes/Edit/" + Action_Id;
    }
    function ReditectToDisableSection(Source_Type_Id) {
        var base_url = window.location.origin;
        window.location = base_url + "/SourceTypes/View/id=" + Source_Type_Id;
    }
</script>
