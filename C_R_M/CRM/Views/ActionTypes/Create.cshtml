@model CustomerManagementSystem.BLL.Models.ActionType

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h1>Action Type</h1>
    <div id="content">

        <div class="box box-danger">
            <div class="box-header with-border">
                <div class="form-horizontal">

                    <div class="form-group"></div>
                    <div class="form-group"></div>
                    <div class="form-group"></div>
                </div>

                <div class="form-horizontal">


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label class="col-md-2">
                            Action Name:
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Action_Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Action_Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-2">
                            Alias:
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-2">
                            Score:
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                            @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-2">
                            Show In Funnel:
                        </label>
                        <div class="col-md-4">
                            @*@Html.CheckBox("ShowInFunnel", false )*@
                            @*<input type="checkbox" id="ShowInFunnel" name="ShowInFunnel" />*@
                            @Html.CheckBoxFor(model => model.ShowInFunnel ,  new { @class = "" ,@onchange= "Funnel()"  })
                            @*@Html.EditorFor(model => model.ShowInFunnel, new { htmlAttributes = new { @class = "form-control", @type = "number" } })*@
                            @Html.ValidationMessageFor(model => model.ShowInFunnel, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div id="hideshow" style="display:none">
                        <div class="form-group">
                            <label class="col-md-2">
                                Order No:
                            </label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                                @Html.ValidationMessageFor(model => model.OrderNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-2">
                                Color:
                            </label>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.HexColor, new { htmlAttributes = new { @class = "form-control jscolor" } })
                                @Html.ValidationMessageFor(model => model.HexColor, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-6 col-md-2">
                            <input type="submit" value="Add" class="btn btn-primary btn-block btn-flat" />

                        </div>
                        <div class=" col-md-2">
                            <input type="button" id="SavenAddNew" value="Save and Add New" class="btn btn-primary btn-block btn-flat" />

                        </div>
                        <div class="col-md-2">
                            <input type="button" onclick="window.location='/ActionTypes/Index'" value="Back to list" class="btn btn-danger btn-block btn-flat" />
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>



}
<script src="~/Content/jsColor/jscolor.js"></script>
<script>
    function Funnel() {
        debugger;
        if ($('#ShowInFunnel')[0].checked) {
            $('#hideshow').show();
        }
        else {
            $('#hideshow').hide();
        }
    }
    $(document).ready(function () {
        $('#ShowInFunnel').on('ifChanged', function (event) { Funnel(); });
    });
</script>

