@model CustomerManagementSystem.BLL.Models.Campaign

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h1>Add Campaign</h1>
    <div id="content">

        <div class="box box-danger">
            <div class="box-header with-border">
                <div class="form-horizontal">

                    <div class="form-group"></div>
                    <div class="form-group"></div>
                    <div class="form-group"></div>
                </div>

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">

                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                        </div>

                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateFrom, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.DateFrom, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.DateFrom, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.DateTo, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.DateTo, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.DateTo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>



                </div>

            </div>

        </div>


        <div class="box box-danger">
            <div class="box-header with-border">
                <div class="form-horizontal">
                    <h3>Properties</h3>

                </div>

                <div class="form-horizontal">

                    <div id="jsGrid"></div>

                </div><input type="hidden" name="propertyids" id="propertyids" />

                <div class="form-horizontal">

                    <div class="form-group"></div>
                    <div class="form-group"></div>
                    <div class="form-group"></div>
                </div>
                <div class="form-horizontal">

                    <div class="form-group">
                        <div class="col-md-offset-6 col-md-2">
                            <input type="submit" value="Add" class="btn btn-primary btn-block btn-flat" />

                        </div>
                        <div class=" col-md-2">
                            <input type="button" id="SavenAddNew" value="Save and Add New" class="btn btn-primary btn-block btn-flat" />

                        </div>
                        <div class="col-md-2">
                            <input type="button" onclick="window.location='/Campaigns/Index'" value="Back to list" class="btn btn-danger btn-block btn-flat" />
                        </div>

                    </div>
                    <input type="hidden" name="propertyids" id="propertyids" />
                </div>
            </div>

        </div>

       
    </div>
}
<script>
    $(function () {
        $(".datepicker").datepicker();
    });
</script>
<script src="/Content/js/plugins/jquery/jquery-3.3.1.js"></script>
<script>
    listofids = [];
    function Add_Sub_IDS(id, ischecked) {

        if (ischecked) {
            listofids.push(id);
        }
        else {
            var index = listofids.indexOf(id);
            if (index > -1) {
                listofids.splice(index, 1);
            }
        }
        $('#propertyids').val(listofids);
    }
    $(document).ready(function () {


        var originalFilterTemplate = jsGrid.fields.text.prototype.filterTemplate;
        jsGrid.fields.text.prototype.filterTemplate = function () {
            var grid = this._grid;
            var $result = originalFilterTemplate.call(this);
            $result.on("keyup", function (e) {
                // TODO: add proper condition and optionally throttling to avoid too much requests
                grid.search();
            });
            return $result;
        }
        $("#jsGrid").jsGrid({
            width: "100%",
            height: "220px",
            sorting: true,
            paging: true,
            autoload: true,
            filtering: true,
            pageSize: 5,
            pageButtonCount: 5,

            controller: {

                loadData: function (filter) {
                    var d = $.Deferred();
                    $.ajax({
                        type: "GET",
                        async: false,
                        url: "../Campaigns/PropertyLoad",
                        dataType: "JSON"
                    }).done(function (result) {
                        for (var prop in filter) {

                            if (filter[prop].length > 0) {
                                result = $.grep(result, function (item) {
                                    var regexp = new RegExp(filter[prop], 'gi');
                                    if (item[prop].match(regexp)) {
                                        return item;
                                    }
                                });
                                break;
                            }

                        }
                        d.resolve(result);
                    });
                    return d.promise();
                }
            },
            fields: [
                {
                    name: "Id", title: "", width: 5, align: "center",
                    itemTemplate: function (value, item) {
                        debugger;

                        return $("<input>").attr("type", "checkbox")
                            .attr("checked", value)
                            .on("change", function () {
                                //debugger
                                var ischecked = $(this).is(":checked");

                                Add_Sub_IDS(item.id, ischecked);
                            });
                    }
                },
                { name: "Name", title: "Name", type: "text", width: 50, validate: "required" },
                { name: "Description", title: "Description", type: "text", width: 50 },
                //{ type: 'control' }
            ]

        });
    }
    );
</script>
