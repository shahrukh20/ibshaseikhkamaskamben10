@model CustomerManagementSystem.BLL.Models.Campaign

@{
    ViewBag.Title = "Delete";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<div id="content">
    <h1>Campaign</h1>
    <div class="box box-danger">
        <div class="box-header with-border">
            <div class="form-horizontal">

                <div class="form-group"></div>
                <div class="form-group"></div>
                <div class="form-group"></div>
            </div>
            <div class="form-horizontal">
                <h3>Are you sure you want to delete this?</h3>

                <hr />
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Name)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Name)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Description)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.DateFrom)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.DateFrom)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.DateTo)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.DateTo)
                    </dd>

                </dl>
            </div><br />

            <div class="box box-danger">
                <div class="box-header with-border">
                    <div class="form-horizontal">
                        <h3>Properties attached with campaign</h3>

                    </div>

                    <div class="form-horizontal">

                        <div id="jsGrid"></div>

                    </div><input type="hidden" value="@ViewBag.PropertyIds" name="propertyids" id="propertyids" />

                    <div class="form-horizontal">

                        <div class="form-group"></div>
                        <div class="form-group"></div>
                        <div class="form-group"></div>
                    </div>
                   
                </div>

            </div>


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-offset-8 col-md-2">
                            <input type="submit" value="Delete" class="btn btn-primary btn-block btn-flat" />

                        </div>
                        <div class="col-md-2">
                            <input type="button" onclick="window.location='/Campaigns/Index'" value="Back to list" class="btn btn btn-danger btn-block btn-flat" />
                        </div>

                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script src="/Content/js/plugins/jquery/jquery-3.3.1.js"></script>
<script>
    listofids = [];
    function Add_Sub_IDS(id, ischecked) {

        if (ischecked) {
            listofids.push(id);
        }
        else {
            var index = listofids.indexOf(id);
            if (index > -1) {
                listofids.splice(index, 1);
            }
        }
        $('#propertyids').val(listofids);
    }
    $(document).ready(function () {
        debugger;
        if ($('#propertyids').val() != "") {
            var lst = $('#propertyids').val().split(',');
            for (var i = 0; i < lst.length; i++) {
                listofids.push(parseInt(lst[i]));
            }
        }


        var originalFilterTemplate = jsGrid.fields.text.prototype.filterTemplate;
        jsGrid.fields.text.prototype.filterTemplate = function () {
            var grid = this._grid;
            var $result = originalFilterTemplate.call(this);
            $result.on("keyup", function (e) {
                // TODO: add proper condition and optionally throttling to avoid too much requests
                grid.search();
            });
            return $result;
        }
        $("#jsGrid").jsGrid({
            width: "100%",
            height: "220px",
            sorting: true,
            paging: true,
            autoload: true,
            filtering: true,
            pageSize: 5,
            pageButtonCount: 5,

            controller: {

                loadData: function (filter) {
                    var d = $.Deferred();
                    $.ajax({
                        type: "GET",
                        async: false,
                        url: "/Campaigns/PropertyLoadForDelete?id=@ViewBag.CampaignID",
                        dataType: "JSON"
                    }).done(function (result) {
                        for (var prop in filter) {

                            if (filter[prop].length > 0) {
                                result = $.grep(result, function (item) {
                                    var regexp = new RegExp(filter[prop], 'gi');
                                    if (item[prop].match(regexp)) {
                                        return item;
                                    }
                                });
                                break;
                            }

                        }
                        d.resolve(result);
                    });
                    return d.promise();
                }
            },
            fields: [
                //{
                //    name: "Id", title: "", width: 5, align: "center",
                //    itemTemplate: function (value, item) {
                //        debugger;
                //        var index = listofids.indexOf(item.id);
                //        if (index > -1) {
                //            value = "true";
                //        }

                //        return $("<input>").attr("type", "checkbox")
                //            .attr("checked", value)
                //            .on("change", function () {
                //                //debugger
                //                var ischecked = $(this).is(":checked");

                //                Add_Sub_IDS(item.id, ischecked);
                //            });
                //    }
                //},
                { name: "Name", title: "Name", type: "text", width: 50, validate: "required" },
                { name: "Description", title: "Description", type: "text", width: 50 },
                //{ type: 'control' }
            ]

        });
    }
    );
</script>