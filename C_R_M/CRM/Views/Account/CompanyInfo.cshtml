@model CustomerManagementSystem.BLL.Models.MyCompanyInfo

@{
    ViewBag.Title = "CompanyInfo";
}

<h1>CompanyInfo</h1>
<br />
<div class="box box-danger" style="padding:10px">
    <form action="/Account/CompanyInfo" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.MyCompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyCompanyName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MyCompanyName, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="form-group">
                    @Html.LabelFor(model => model.MyCompanyLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <input type="file" style="display:none" id="MyCompanyLogo" name="MyCompanyLogo" multiple>
                    <div style="margin-left:-10px" class="col-lg-12">
                        <div class="col-lg-10">
                            <div onclick="$('#MyCompanyLogo').trigger('click')" class="btn btn-primary btn-sm float-left">
                                <span>Choose files</span>
                            </div>
                            <input class="form-control" type="text" id="MyCompanyLogotext" disabled placeholder="Upload one or images">
                        </div>
                    </div>
                </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.MyCompanyLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <input type="file" style="display:none" id="MyCompanyLogo" name="MyCompanyLogo1">
                    <div class="">
                        <div class="">
                            <div onclick="$('#MyCompanyLogo').trigger('click')" class="btn btn-primary btn-sm float-left">
                                <span>Choose files</span>
                            </div>
                            <input class="form-control" type="text" id="MyCompanyLogotext" disabled placeholder="Upload image">
                        </div>
                    </div>
                </div>
                <div style="margin-top: 18px;" class="col-md-4">
                    @{ string path1 = ViewBag.path + Model.MyCompanyLogo;}
                    <img class="pop" src="@path1" style="width:50px;height:50px" />
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.MyCompanyMiniatureLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <input type="file" style="display:none" id="MyCompanyMiniatureLogo" name="MyCompanyMiniatureLogo" multiple>
                    <div style="margin-left:-10px" class="col-lg-12">
                        <div class="col-lg-10">
                            <div onclick="$('#MyCompanyMiniatureLogo').trigger('click')" class="btn btn-primary btn-sm float-left">
                                <span>Choose files</span>
                            </div>
                            <input class="form-control" type="text" id="MyCompanyMiniatureLogotext" disabled placeholder="Upload one or images">
                        </div>
                    </div>
                </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.MyCompanyMiniatureLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <input type="file" style="display:none" id="MyCompanyMiniatureLogo" name="MyCompanyMiniatureLogo1">
                    <div class="">
                        <div class="">
                            <div onclick="$('#MyCompanyMiniatureLogo').trigger('click')" class="btn btn-primary btn-sm float-left">
                                <span>Choose files</span>
                            </div>
                            <input class="form-control" type="text" id="MyCompanyMiniatureLogotext" disabled placeholder="Upload image">
                        </div>
                    </div>
                </div>
                <div style="margin-top: 18px;" class="col-md-4">
                    @{ string path2 = ViewBag.path + Model.MyCompanyMiniatureLogo;}
                    <img class="pop" src="@path2" style="width:50px;height:50px" />
                </div>
            </div>
            @*<div class="form-group">
                    @Html.LabelFor(model => model.MyCompanyLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MyCompanyLogo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MyCompanyLogo, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.MyCompanyMiniatureLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MyCompanyMiniatureLogo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MyCompanyMiniatureLogo, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            @Html.HiddenFor(i => i.MyCompanyLogo)
            @Html.HiddenFor(i => i.MyCompanyMiniatureLogo)
            <div class="form-group">
                @Html.LabelFor(model => model.MyCompanySlogan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyCompanySlogan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MyCompanySlogan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FiscalYearStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FiscalYearStartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FiscalYearStartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Currency", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("CurrencyId", null, htmlAttributes: new { @class = "form-control", @required = "required", @onchange = "GetCity()" })
                    @Html.ValidationMessage("CurrencyId", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DefaultPhoneCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DefaultPhoneCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DefaultPhoneCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MyCompanyAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyCompanyAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MyCompanyAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-offset-8 col-md-2">
                        <input type="submit" value="Update" class="btn btn-primary btn-block btn-flat" />

                    </div>
                    <div class="col-md-2">
                        <input type="button" onclick="window.location='/Account/UserListing'" value="Back to list" class="btn btn-danger btn-block btn-flat" />
                    </div>

                </div>
            </div>
        </div>
    </form>
</div>


<script>
    function rtrim(str) {
        return str.replace(/\,$/, '');
    }
    $(document).ready(function () {
        //   $.noConflict();
        $('#MyCompanyMiniatureLogo').change(function () {
            var i;
            var names = '';
            for (i = 0; i < $('#MyCompanyMiniatureLogo')[0].files.length; ++i) {
                names += $('#MyCompanyMiniatureLogo')[0].files[i].name + "  ,  ";
            }
            $('#MyCompanyMiniatureLogotext').val('')
            $('#MyCompanyMiniatureLogotext').val(rtrim(names));
        })
        $('#MyCompanyLogo').change(function () {
            var i;
            var names = '';
            for (i = 0; i < $('#MyCompanyLogo')[0].files.length; ++i) {
                names += $('#MyCompanyLogo')[0].files[i].name + "  ,  ";
            }
            $('#MyCompanyLogotext').val('')
            $('#MyCompanyLogotext').val(rtrim(names));
        })
    })
</script>
