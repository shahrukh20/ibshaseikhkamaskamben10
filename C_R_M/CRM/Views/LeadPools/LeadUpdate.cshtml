@model CustomerManagementSystem.BLL.ViewModels.LeadPoolsViewModel

<script src="/Content/js/plugins/jquery/jquery-3.3.1.js"></script>
<script>
    $(document).ready(function () {
        // Datepicker Popups calender to Choose date.
        $(function () {
            $("#datepicker").datepicker();
            // Pass the user selected date format.
            $("#format").change(function () {
                $("#datepicker").datepicker("option", "dateFormat", $(this).val());
            });
        });
    });
</script>
<style>
    .img-wrap {
        position: relative;
        display: inline-block;
        /*border: 1px red solid;*/
        font-size: 0;
    }

        .img-wrap .close {
            position: absolute;
            top: 2px;
            right: 2px;
            z-index: 100;
            background-color: #FFF;
            padding: 5px 2px 2px;
            color: #000;
            font-weight: bold;
            cursor: pointer;
            opacity: 1.2;
            text-align: center;
            font-size: 22px;
            line-height: 10px;
            border-radius: 50%;
            margin-top: 15px;
        }

        .img-wrap:hover .close {
            opacity: 1;
        }
</style>

<form class="tab-pane fade in active" id="leadForm" action="/LeadPools/LeadUpdate" method="post"  enctype="multipart/form-data">
    @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control", @style = "display:none" } })
    <div id="content">
        <input type="hidden" name="dltimg" id="dltimg" />
        <div class="form-horizontal">

            <div class="form-group">
                <div class="col-lg-10">
                    <h1>Log Edit Lead</h1>
                </div>

            </div>
            <div style="padding:10px" class="box box-danger">

                <div class="form-group">
                    <div class="">
                        <div class="col-md-10">
                            <h2>Lead Information</h2>
                        </div>


                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-2">
                        <label class="control-label">Log#:</label>
                    </div>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtLogNo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>


                    <label class="col-md-2">
                        Date:
                    </label>

                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    </div>

                </div>
                <div class="form-group">
                    <label class="col-md-2">
                        Name:
                    </label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtLeadName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @*<input type="text" id="txtLeadName" name="txtLeadName" class="form-control" />*@
                    </div>
                </div>
                <div class="form-group">


                    <label class="col-md-2">
                        Property:
                    </label>
                    <div class="col-md-4">
                        <select class="form-control select No-Validate" id="ddlProperty" name="ddlProperty">
                            @{
                                foreach (var item in (IEnumerable<SelectListItem>)ViewBag.Properties)
                                {
                                    if (item.Selected)
                                    {
                                        <option value="@item.Value" selected>@item.Text</option>}
                                    else
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                }
                                @*<option value="1">PropertyName</option>
                        <option value="2">hGNtzJTsJc</option>*@
                            }
                        </select>
                        @*@Html.DropDownList("Properties", (IEnumerable<SelectListItem>)ViewBag.Properties, new { @class = "form-control select No-Validate" })*@
                    </div>
                    <div id="divCampaignMsg" style="color:blue" class="col-md-4">

                    </div>


                </div>
                <div class="form-group">


                    <label class="col-md-2">
                        Contact Person:
                    </label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtContactPerson, new { htmlAttributes = new { @class = "form-control", } })
                        @*<input type="text" id="txtContactPerson" name="txtContactPerson" class="form-control" />*@
                    </div>

                    <label class="col-md-2">
                        Designation:
                    </label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtDesignation, new { htmlAttributes = new { @class = "form-control", } })
                        @*<input type="text" id="txtDesignation" name="txtDesignation" class="form-control" />*@
                    </div>


                </div>
                <div class="form-group">

                    <label class="col-md-2">
                        Telephone:
                    </label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtTel, new { htmlAttributes = new { @class = "form-control", } })
                        @*<input type="text" id="txtTel" name="txtTel" class="form-control" />*@
                    </div>

                    <label class="col-md-2">
                        Mobile:
                    </label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtMobile, new { htmlAttributes = new { @class = "form-control", } })
                        @*<input type="text" id="txtTel" name="txtTel" class="form-control" />*@
                    </div>

                </div>
                <div class="form-group">
                    <label class="col-md-2">
                        Fax:
                    </label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtFax, new { htmlAttributes = new { @class = "form-control", } })
                        @*<input type="text" id="txtFax" name="txtFax" class="form-control" />*@
                    </div>

                    <label class="col-md-2">
                        Email:
                    </label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtEmail, new { htmlAttributes = new { @class = "form-control", } })
                        @*<input type="text" id="txtEmail" name="txtEmail" class="form-control" />*@
                    </div>


                </div>
                <div class="form-group">
                    <label class="col-md-2">
                        Source Of Lead:
                    </label>
                    <div class="col-md-4">
                        @*@Html.EditorFor(model => model.ddlSourceOfLead, new { htmlAttributes = new { @class = "form-control", } })*@
                        @*@Html.DropDownList("SourceOfLead", (IEnumerable<SelectListItem>)ViewBag.SourceOfLead, new { @class = "form-control select No-Validate" })*@
                        <select class="form-control select No-Validate" id="ddlSourceOfLead" name="ddlSourceOfLead">
                            @{
                                foreach (var item in (IEnumerable<SelectListItem>)ViewBag.SourceOfLead)
                                {
                                    if (item.Selected)
                                    {
                                        <option value="@item.Value" selected>@item.Text</option>}
                                    else
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                }
                                @*<option value="1">PropertyName</option>
                        <option value="2">hGNtzJTsJc</option>*@
                            }
                        </select>
                        @*<DropDownList id="" class="form-control"></DropDownList>*@
                    </div>

                    <label class="col-md-2">
                        Source:
                    </label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.txtSource, new { htmlAttributes = new { @class = "form-control", } })
                        @*<input type="text" id="txtSource" name="txtSource" class="form-control" />*@
                    </div>

                </div>
                <div class="form-group">
                    <label class="col-md-2">
                        Budget:
                    </label>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.txtbudget, new { htmlAttributes = new { @class = "form-control" } })

                    </div>
                    <div class="col-md-2">
                        <select class="form-control select No-Validate" id="ddlCurrency" name="ddlCurrency">
                            @{
                                foreach (var item in (IEnumerable<SelectListItem>)ViewBag.Currency)
                                {
                                    if (item.Selected)
                                    {
                                        <option value="@item.Value" selected>@item.Text</option>}
                                    else
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                }
                                @*<option value="1">PropertyName</option>
                        <option value="2">hGNtzJTsJc</option>*@
                            }
                        </select>
                        @*@Html.DropDownList("ddlCurrency", (IEnumerable<SelectListItem>)ViewBag.Currency, new { @class = "form-control select" })*@
                    </div>



                </div>
                <div class="form-group">
                    <label class="col-md-2">
                        Remarks:
                    </label>
                    <div class="col-md-8">
                        @*<input type="text" ID="txtRemarks" TextMode="MultiLine" Rows="3" class="form-control" />*@
                        @*@Html.EditorFor(model => model.txtRemarks, new { htmlAttributes = new { @class = "form-control",  } })*@
                        @*@Html.EditorFor(model => model.txtRemarks, new { htmlAttributes = new { @class = "col-md-8", } })*@
                        @*<textarea name="txtRemarks" id="txtRemarks" cols="25" rows="3" class="col-md-8"></textarea>*@
                        @Html.TextAreaFor(model => model.txtRemarks, new { @class = "form-control", @rows = 3, @cols = 25 })
                        @*@Html.EditorFor(model => model.txtRemarks)
                <textarea name="txtRemarks" id="txtRemarks" cols="25" rows="3" class="col-md-9"></textarea>*@
                    </div>



                </div>
                <div class="form-group">
                    <input type="file" style="display:none" id="images" name="images" multiple>
                    <div style="margin-left:-10px" class="col-lg-12">
                        <div class="col-lg-10">
                            <div onclick="$('#images').trigger('click')" class="btn btn-primary btn-sm float-left">
                                <span>Choose files</span>
                            </div>
                            <input class="form-control" type="text" id="text" disabled placeholder="Upload one or images">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="box box-danger" style="overflow-x:scroll;height: 163px;">
            <div style="width:100%;height: 120px;border-radius: 12.4px;margin-bottom: 15px;padding: 9px;" class="">

                @{
                    List<string> images = (List<string>)ViewBag.images;
                    if (images != null)
                    {
                        if (images.Count > 0)
                        {
                            foreach (var imageurl in images)
                            {
                                <div class="img-wrap">
                                    <span class="close">&times;</span>
                                    <img src="@imageurl" class="pop" style="margin-left: 50px;margin-top:15px;margin-bottom:10px;width: 120px;height:100px;border-radius: 6.4px;" data-id="@imageurl" />
                                </div>

                            }

                        }
                        else
                        {
                            <div style="text-align: center;"><h3 style="color:black">No Images Available</h3></div>
                        }
                    }
                }
            </div>
        </div>
        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-md-offset-10 col-md-3">
                    <button type="submit" class="btn btn-info btn-lg">Save</button>
                </div>
            </div>
        </div>
    </div>
</form>
<script>
    function rtrim(str) {
        return str.replace(/\,$/, '');
    }
    $(document).ready(function () {
        var dltimg = [];
        $('.img-wrap .close').on('click', function () {
            var id = $(this).closest('.img-wrap').find('img').data('id');
            dltimg.push(id);
            $('#dltimg').val(dltimg);
            $(this).closest('.img-wrap').fadeOut(1000)
           
        });
        $('#images').change(function () {
            debugger;
            var i;
            var names = '';
            for (i = 0; i < $('#images')[0].files.length; ++i) {
                names += $('#images')[0].files[i].name + "  ,  ";
            }
            $('#text').val('')
            $('#text').val(rtrim(names));
        })
        var MyDateField = function (config) {
            jsGrid.Field.call(this, config);
        };

        MyDateField.prototype = new jsGrid.Field({

            css: "date-field",            // redefine general property 'css'
            align: "center",              // redefine general property 'align'

            myCustomProperty: "foo",      // custom property

            sorter: function (date1, date2) {
                return new Date(date1) - new Date(date2);
            },

            itemTemplate: function (value) {

                return new Date(value).toDateString();
            },

            filterTemplate: function (value) {
                return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
            },

            insertTemplate: function (value) {
                if (this.inserting)
                    return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
            },

            editTemplate: function (value) {
                if (this.inserting)
                    return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
            },

            insertValue: function () {
                if (this.inserting)
                    return this._insertPicker.datepicker("getDate").toISOString();
            },

            editValue: function () {
                if (this.inserting)
                    return this._editPicker.datepicker("getDate").toISOString();

            }
        });

        jsGrid.fields.date = MyDateField;


        $("#jsGrid").jsGrid({
            width: "100%",
            height: "400px",
            filtering: false,
            editing: false,
            sorting: false,
            paging: true,
            autoload: true,
            pageSize: 5,
            pageButtonCount: 5,

            controller: {


                loadData: function (filter) {
                    var id = $("#id").val();
                    return $.ajax({
                        type: "POST",
                        data: JSON.stringify({ id: id }),
                        url: "../LeadPools/LoadLeadAttachments?id=" + id,
                        dataType: "JSON"
                    });
                }
            },
            fields: [
                { name: "id", title: "id", type: "text", visible: false, align: 'center' },
                { name: "Name", title: "Name", type: "text", width: 50, validate: "required", align: 'center', editing: false },
                { name: "Size", title: "Size", type: "text", width: 50, align: 'center', editing: false },
                {
                    name: 'Download',
                    align: 'center',
                    itemTemplate: function (_, item) {
                        //return $("<button>").text("Click Me")
                        //    .on("click", function () {
                        //        alert(item.Name);
                        //    });
                        //return "<a href=\"\WorkOrders\WorkOrder?MileStoneId=" + item.Id + "\">link text</a>";
                        return "<a onclick ='DownloadFile(" + item.id + ")' name='sds'>Download</a>";
                        //return '@Html.ActionLink("WorkOrders", "WorkOrder", @"WorkOrders\WorkOrder", new { WorkOrders = 1 })';
                    }
                }
            ]

        });


        $("#jsContact").jsGrid({
            width: "100%",
            height: "200px",
            inserting: true,
            editing: true,
            sorting: true,
            paging: true,
            autoload: true,

            pageSize: 5,
            pageButtonCount: 5,
            controller: {
                //loadData: function (filters) { $('.hasDatepicker').datepicker(); }
                //data: $("#jsContact").jsGrid("option", "data"),
                //loadData: function (filter) {
                //    return $.grep(this.data, function (item) {
                //        return (!filter.Name || item.Name.indexOf(filter.Name) >= 0);
                //    });
                //},
                //loadData: function (filter) {
                //    var d = $.Deferred();

                //    // server-side filtering
                //    $.ajax({
                //        type: "GET",
                //        url: "/items",
                //        data: filter,
                //        dataType: "json"
                //    }).done(function (result) {
                //        // client-side filtering
                //        result = $.grep(result, function (item) {
                //            return item.SomeField === filter.SomeField;
                //        });

                //        d.resolve(result);
                //    })

                //    return d.promise();
                //}
            }
            ,
            fields: [
                { name: "name", title: "Name", type: "text", align: 'center' },
                { name: "actiontime1", title: "Action Time", type: "date", width: 50, align: 'center' },
                { name: "contact", title: "Contact No", type: "text", width: 50, align: 'center', validate: "required" },
                { type: "control" }
            ]

        });
    }
    );

</script>
<script>
    $(function () {
        $(".datepicker").datepicker();
    });

    $("#ddlProperty").change(function () {
        var end = this.value;
        $.ajax({
            type: 'POST',
            data: JSON.stringify({ _id: end }),
            url: "/LeadPools/UpdateLabelForCampaigns",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (data) {
                $("#divCampaignMsg").attr("visibility", "visible");
                $('#divCampaignMsg').text(data);
            },
            Error: function (data) {
            }
        });

    });

    function HideShowRevision() {
        var x = document.getElementById("divAttachments");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
    function DownloadFile(id) {
        $.ajax({
            type: "POST",
            url: "../LeadPools/DownloadFile?id=" + id,
            dataType: "JSON",
            success: function () {
                var base_url = window.location.origin;
                window.location = base_url + "/LeadPools/DownloadFile?id=" + id;
            },
            error: function () {
                var base_url = window.location.origin;
                window.location = base_url + "/LeadPools/DownloadFile?id=" + id;
            }
        });
    }
    function PostForm() {
        if ($("#leadForm").valid()) {
            var data1 = $("#jsContact").jsGrid("option", "data");
            var str = $("#leadForm").serialize();
            $.ajax({
                type: "POST",
                url: "../LeadPools/PostForm",
                data: JSON.stringify({ LeadContactVM: data1, LeadStatusVMJson: str }),
                dataType: "JSON",
                success: function () {
                    var base_url = window.location.origin;
                    window.location = base_url + "/LeadPools/LeadListing";
                },
                error: function () {
                    var base_url = window.location.origin;
                    window.location = base_url + "/LeadPools/DownloadFile?id=" + id;
                }
            });
        }
    }
</script>
<style>
    .datepicker {
        background: white url('../../img/clear.png');
    }
</style>
