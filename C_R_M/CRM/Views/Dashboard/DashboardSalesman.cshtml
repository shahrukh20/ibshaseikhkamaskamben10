@using CustomerManagementSystem.BLL.Models;

@{
    // Layout = null;
}
<style>
    .dashboardtitle {
        font-size: 14px;
        padding-left: 5px;
        margin-top: 0px;
        padding-bottom: 5px;
        padding-top: 5px;
        border-bottom: 1px solid #e6e5e5;
    }
    /*.fc-event{
        background-color:red !important;
    }
    .fc-title{
        color:white!important;
    }*/
</style>
<h1>Dashboard</h1>

<div class="form-horizontal">
    <div class="row">
        <section class="col-md-8">
            <div class="box box-success">
                <div class="card card-primary">
                    <h3 class="box-title dashboardtitle">Appoitments</h3>
                    <div class="slimScrollDiv" style="position: relative; overflow: hidden; ">
                        <div class="card-body p-0" style="overflow: hidden;">
                            <!-- THE CALENDAR -->
                            <div style="height:600px; width:100%;background-color:white" id="calendar"></div>
                        </div>
                    </div>
                    <!-- /.card-body -->
                </div>
            </div>
        </section>
        <section class="col-md-4">
            <div class="box box-success">
                <div class="card card-primary">
                    <h3 class="box-title dashboardtitle">Today's Appoitments</h3>
                    <div style="font-size: 63px; text-align: center;">
                        @((int)ViewBag.TodaysAppointmentCount )
                    </div>
                </div>
            </div>
            <div class="box box-success">
                <div class="card card-primary">
                    <h3 class="box-title dashboardtitle">Assign Leads</h3>
                    <div style="font-size: 63px; text-align: center;">
                        @((int)ViewBag.AssignedLeads)
                    </div>
                </div>
            </div>
            <div class="box box-success">
                <div class="card card-primary">
                    <h3 class="box-title dashboardtitle">Sales Funnel</h3>
                </div>
            </div>
        </section>

    </div>
    <div class="row">
        <section class="col-md-6">
            <div class="box box-success">
                <div class="card card-primary">
                    <h3 class="box-title dashboardtitle">Today's Appointment</h3>
                    <div class="card-body p-0">
                        @*This table should change by responsive grid*@
                        <table id="todayAppt" class="table table-bordered table-striped dataTable" role="grid" aria-describedby="example1_info">
                            <thead>
                                <tr role="row">
                                    <th tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending" style="width: 217.8px;">Lead#</th>
                                    @*<th class="sorting" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending" style="width: 266.6px;">Lead Desc</th>*@
                                    <th class="sorting" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-label="Platform(s): activate to sort column ascending" style="width: 237px;">Action</th>
                                    <th class="sorting" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-label="Engine version: activate to sort column ascending" style="width: 187.4px;">Time</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{

                                    foreach (var item in (ViewBag.TodaysAppointment as List<LeadStatusFields>))
                                    {
                                        <tr>
                                            <td>Lead# @item.leadPool.Id</td>
                                            @*<td>@item.leadPool.Lead_Remarks</td>*@
                                            <td>@(item.NextActionDate == null ? "New" : item.StatusType.Status1)</td>
                                            <td>@(item.NextActionTime == null ? 0 : item.TotalLeadScore)</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </section>
        <section class="col-md-6">
            <div class="box box-success">
                <div class="card card-primary">
                    <h3 class="box-title dashboardtitle">Top 10 Highest Score Leads</h3>
                    <div class="card-body p-0">
                        <table id="todayAppt" class="table table-bordered table-striped dataTable" role="grid" aria-describedby="example1_info">
                            <thead>
                                <tr role="row">
                                    <th tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending" style="width: 217.8px;">Lead#</th>
                                    <th class="sorting" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-label="Platform(s): activate to sort column ascending" style="width: 237px;">Status(s)</th>
                                    <th class="sorting" tabindex="0" aria-controls="example1" rowspan="1" colspan="1" aria-label="Engine version: activate to sort column ascending" style="width: 187.4px;">Score</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{

                                    foreach (var item in (ViewBag.TopScoreLeads as List<LeadStatusFields>))
                                    {
                                        <tr>
                                            <td>Lead# @item.leadPool.Id</td>
                                            @*<td>@item.leadPool.Lead_Remarks</td>*@
                                            <td>@(item.StatusType == null ? "New" : item.StatusType.Status1)</td>
                                            <td>@(item.ActionType == null ? 0 : item.TotalLeadScore)</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </section>
    </div>

</div>
<script src="~/plugins/jquery/jquery.min.js"></script>
<script>
    function getdate(year, month, day, hours, minutes) {
        // "2018-07-12 04:02",
        if (year == null) {
            return "";
        }
        if (month.length == 1) {
            month = "0" + month;
        }
        if (day.length == 1) {
            day = "0" + day;
        }
        if (hours.length == 1) {
            hours = "0" + hours;
        }
        if (minutes.length == 1) {
            minutes = "0" + minutes;
        }

        if (hours == null) {
            return year + "-" + month + "-" + day;
        }
        else {
            return year + "-" + month + "-" + day + " " + hours + ":" + minutes;
        }

    }
    $(function () {

        /* initialize the external events
         -----------------------------------------------------------------*/
        function ini_events(ele) {
            ele.each(function () {

                // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
                // it doesn't need to have a start or end
                var eventObject = {
                    title: $.trim($(this).text()) // use the element's text as the event title
                }

                // store the Event Object in the DOM element so we can get to it later
                $(this).data('eventObject', eventObject)

                // make the event draggable using jQuery UI
                $(this).draggable({
                    zIndex: 1070,
                    revert: true, // will cause the event to go back to its
                    revertDuration: 0  //  original position after the drag
                })

            })
        }

        ini_events($('#external-events div.external-event'))
        var Events = [];
        //  var events = [
        //{
        //    "title": "Case/Suspect",
        //    "start": "2018-08-12",
        //    "backgroundColor": "#f56954",
        //    "borderColor": "#f56954"
        //},
        //{
        //    "title": "Dave at 103",
        //    "start": "2018-07-25",
        //    "end": "2018-07-26"
        //}
        //  ];
        /* initialize the calendar
        var e
       -----------------------------------------------------------------*/
        //Date for the calendar events (dummy data)
        $.ajax({
            url: '/Dashboard/getAllLeadStatus',
            type: 'post',
            dataType: "json",
            async: false,

            success: function (data) {
                debugger;
                data.forEach(function (item) {
                    var color = "";
                    if (item.ActionName == "Case/Prospect") {
                        color = "#00a65a";
                    }
                    else if (item.ActionName == "Case/Suspect") {
                        color = "#f56954";
                    }
                    else if (item.ActionName == "No") {
                        color = "";
                    }
                    else if (item.ActionName == "Hold") {
                        color = "#f39c12";
                    }
                    else if (item.ActionName == "Dropped") {
                        color = "#00c0ef";
                    }
                    else if (item.ActionName == "Lost") {
                        color = "#dd4b39";
                    }
                    else if (item.ActionName == "Closed") {
                        color = "#080808";
                    }

                    var obj = {
                        title: "\LD#: " + item.LeadName + "\nAction: " + item.ActionName,
                        start: getdate(item.Year, item.Month, item.Day, item.Hour, item.Minutes),
                        backgroundColor: color, //red
                        borderColor: color, //red
                        url: '/LeadPools/StatusUpdate?id=' + item.LeadName,
                    };
                    if (item.Year != null)
                        Events.push(obj);
                })


            }



        });
        console.log(Events);
        console.log(JSON.stringify(Events));
        var date = new Date()
        var d = date.getDate(),
            m = date.getMonth(),
            y = date.getFullYear()
        var calendar = $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: ''
            },
            //buttonText: {
            //    today: 'today',
            //    month: 'month',
            //    week: 'week',
            //    day: 'day'
            //},
            //Random default events
            events: Events,
            editable: true,
            droppable: true, // this allows things to be dropped onto the calendar !!!
            drop: function (date, allDay) { // this function is called when something is dropped

                // retrieve the dropped element's stored Event Object
                var originalEventObject = $(this).data('eventObject')

                // we need to copy it, so that multiple events don't have a reference to the same object
                var copiedEventObject = $.extend({}, originalEventObject)

                // assign it the date that was reported
                copiedEventObject.start = date
                copiedEventObject.allDay = allDay
                copiedEventObject.backgroundColor = $(this).css('background-color')
                copiedEventObject.borderColor = $(this).css('border-color')

                // render the event on the calendar
                // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                $('#calendar').fullCalendar('renderEvent', copiedEventObject, true)

                // is the "remove after drop" checkbox checked?
                if ($('#drop-remove').is(':checked')) {
                    // if so, remove the element from the "Draggable Events" list
                    $(this).remove()
                }

            },
            eventRender: function (event, element) {

                $(element).tooltip({ title: event.title });
            }
        })



        /* ADDING EVENTS */
        var currColor = '#3c8dbc' //Red by default
        //Color chooser button
        var colorChooser = $('#color-chooser-btn')
        $('#color-chooser > li > a').click(function (e) {
            e.preventDefault()
            //Save color
            currColor = $(this).css('color')
            //Add color effect to button
            $('#add-new-event').css({
                'background-color': currColor,
                'border-color': currColor
            })
        })
        $('#add-new-event').click(function (e) {
            e.preventDefault()
            //Get value and make sure it is not null
            var val = $('#new-event').val()
            if (val.length == 0) {
                return
            }

            //Create events
            var event = $('<div />')
            event.css({
                'background-color': currColor,
                'border-color': currColor,
                'color': '#fff'
            }).addClass('external-event')
            event.html(val)
            $('#external-events').prepend(event)

            //Add draggable funtionality
            ini_events(event)

            //Remove event from text input
            $('#new-event').val('')
        })
    })
</script>
