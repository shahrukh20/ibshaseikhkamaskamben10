@model CustomerManagementSystem.BLL.Models.Area

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h1>Area</h1>
    <div id="content">

        <div class="box box-danger">
            <div class="box-header with-border">
                <div class="form-horizontal">

                    <div class="form-group"></div>
                    <div class="form-group"></div>
                    <div class="form-group"></div>
                </div>
                <div class="form-horizontal">

                    <div class="form-group">
                        @Html.Label("Country", htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @* @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @placeholder = "Country" } })*@
                            @Html.DropDownList("Country", (IEnumerable<SelectListItem>)ViewBag.Country, new { @class = "form-control select", onchange = "GetCity()" })


                            @*  @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CityId, "City", htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.AreaName, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AreaName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AreaName, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-8 col-md-2">
                            <input type="submit" value="Add" class="btn btn-primary btn-block btn-flat" />

                        </div>
                        <div class="col-md-2">
                            <input type="button" onclick="window.location='/Areas/Index'" value="Back to list" class="btn btn-danger btn-block btn-flat" />
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script>
    $(document).ready(function () {
        GetCity();
    })
    function GetCity() {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#CityId").html(procemessage).show();
        var url = "/PropertyMasters/GetCityByCountryId";

        $.ajax({
            url: url,
            data: { CountryId: $('#Country').val() },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>Select City</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#CityId").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>
