@model IEnumerable<CustomerManagementSystem.BLL.Models.Area>

@{
    ViewBag.Title = "Index";
}


<div id="content">
    <h1>Areas Listing</h1>
    <div class="box box-danger">
        <div class="box-header with-border">



            <div id="content">
                <div class="addbutton right">
                    <a href="@Url.Action("Create", "Areas")"> <input type="button" class="btn btn-danger" value="Add Area" /></a>


                </div>
                <div class="form-horizontal">
                    <div id="jsGrid"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">



    $(document).ready(function () {

        //Float Value
        function DecimalField(config) {
            jsGrid.fields.number.call(this, config);
        }

        DecimalField.prototype = new jsGrid.fields.number({

            filterValue: function () {
                return this.filterControl.val()
                    ? parseFloat(this.filterControl.val() || 0, 10)
                    : undefined;
            },

            insertValue: function () {
                return this.insertControl.val()
                    ? parseFloat(this.insertControl.val() || 0, 10)
                    : undefined;
            },

            editValue: function () {
                return this.editControl.val()
                    ? parseFloat(this.editControl.val() || 0, 10)
                    : undefined;
            }
        });

        jsGrid.fields.decimal = jsGrid.DecimalField = DecimalField;
        //End Float Value


        var originalFilterTemplate = jsGrid.fields.text.prototype.filterTemplate;
        jsGrid.fields.text.prototype.filterTemplate = function () {
            var grid = this._grid;
            var $result = originalFilterTemplate.call(this);
            $result.on("keyup", function (e) {
                // TODO: add proper condition and optionally throttling to avoid too much requests
                grid.search();
            });
            return $result;
        }

        $("#jsGrid").jsGrid({
            width: "100%",
            filtering: true,
            sorting: true,
            paging: true,
            autoload: true,
            async: false,

            pageSize: 15,
            pageButtonCount: 5,

            controller: {

                loadData: function (filter) {
                    var d = $.Deferred();
                    $.ajax({
                        type: "GET",
                        async: false,
                        url: "../Areas/AreasAjax",
                        dataType: "JSON"
                    }).done(function (result) {
                        for (var prop in filter) {

                            //if (prop == "Score" && filter['Score'] != null) {
                            //    result = $.grep(result, function (item) {
                            //        if (item[prop] == filter[prop]) {
                            //            return item;
                            //        }
                            //    });
                            //    break;
                            //}
                            //if (prop != "Score"){
                            if (filter[prop].length > 0) {
                                result = $.grep(result, function (item) {
                                    var regexp = new RegExp(filter[prop], 'gi');
                                    if (item[prop].match(regexp)) {
                                        return item;
                                    }
                                });
                                break;
                            }
                            //}



                        }
                        d.resolve(result);
                    });
                    return d.promise();
                }
            },
            fields: [
                { name: "AreaId", title: "AreaId", type: "number", visible: false, },
                { name: "AreaName", title: "Area Name", type: "text", width: 150, validate: "required", editing: false },
                { name: "CityName", title: "City Name", type: "text", width: 50, validate: "required", editing: false },
                {
                    type: 'control',
                    align: 'center',
                    itemTemplate: function (_, item) {
                        return "<a onclick =\"ReditectToEditSection(" + item.AreaId + ");\" name='Edit'><span class='elementID'><span class='fa fa-pencil'></span></span></a>&nbsp&nbsp&nbsp<a href=\"/Areas/Delete/" + item.AreaId + "\"><span class='elementID'><span class='fa fa-times'></span></span></a>";
                    }, width: 20
                }
            ]

        });

    });

</script>
<script>

    function ReditectToViewSection(Action_Id) {
        var base_url = window.location.origin;
        window.location = base_url + "/Areas/Details/" + Action_Id;
    }

    function ReditectToEditSection(Action_Id) {
        var base_url = window.location.origin;
        window.location = base_url + "/Areas/Edit/" + Action_Id;
    }
    function ReditectToDisableSection(Source_Type_Id) {
        var base_url = window.location.origin;
        window.location = base_url + "/Areas/View/id=" + Source_Type_Id;
    }
</script>

