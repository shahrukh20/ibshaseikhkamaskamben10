@model CustomerManagementSystem.BLL.Models.PropertyMaster

@{
    ViewBag.Title = "Create";
    // Layout = "~/Views/Shared/_Layout.cshtml";
}

<form action="/PropertyMasters/Create" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
   
    <div id="content">
        <h1>Property</h1>
        <div class="box box-danger">
            <div class="box-header with-border">
                <div class="form-horizontal">

                    <div class="form-group"></div>
                    <div class="form-group"></div>
                    <div class="form-group"></div>
                </div>


                <div class="form-horizontal">
                    @*  <h4>PropertyMaster</h4>*@

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="">
                        @Html.LabelFor(model => model.PropertyName, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.PropertyName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Property Name" } })
                            @Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @* @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @placeholder = "Country" } })*@
                            @Html.DropDownList("Country", (IEnumerable<SelectListItem>)ViewBag.Country, "Select Country ", new { @class = "form-control select", onchange = "GetCity()" })


                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div><br />
                    <div class="">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @*@{
                                var b = new List<SelectListItem> { new SelectListItem() { Text = "Karachi", Value = "Karachi" }, new SelectListItem() { Text = "Lahore", Value = "Lahore" } };
                            }*@
                            @* @Html.DropDownList("City", b, "Select City", new { @class = "form-control", @placeholder = "City" })*@

                            @Html.DropDownList("City", (IEnumerable<SelectListItem>)ViewBag.City, "Select City", new { @class = "form-control select", onchange = "GetArea()" })


                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="">
                        @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("Area", (IEnumerable<SelectListItem>)ViewBag.Area1, "Select Area", new { @class = "form-control select" })
                            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                    <div class="clearfix"></div>
                    <div class="">
                        @Html.LabelFor(model => model.PropertyType, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            <select class="form-control select No-Validate" id="PropertyType" name="PropertyType">
                                @{
                                    foreach (var item in (IEnumerable<SelectListItem>)ViewBag.PropertyType)
                                    {
                                        if (item.Selected)
                                        {
                                            <option value="@item.Value" selected>@item.Text</option>}
                                        else
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }

                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.PropertyType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="">
                        @Html.LabelFor(model => model.PropertyDetail, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.PropertyDetail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Property Detail" } })
                            @Html.ValidationMessageFor(model => model.PropertyDetail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div><br />
                    <div class="">
                        @Html.LabelFor(model => model.PlotNo, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.PlotNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Plot No" } })
                            @Html.ValidationMessageFor(model => model.PlotNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="">
                        @Html.LabelFor(model => model.PlotArea, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.PlotArea, new { htmlAttributes = new { @class = "form-control", @placeholder = "Plot Area" } })
                            @Html.ValidationMessageFor(model => model.PlotArea, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div><br />
                    <div class="">
                        @Html.LabelFor(model => model.BuiltUpArea, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.BuiltUpArea, new { htmlAttributes = new { @class = "form-control", @placeholder = "BuiltUp Area" } })
                            @Html.ValidationMessageFor(model => model.BuiltUpArea, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="">
                        @Html.LabelFor(model => model.CommercialArea, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.CommercialArea, new { htmlAttributes = new { @class = "form-control", @placeholder = "Commercial Area" } })
                            @Html.ValidationMessageFor(model => model.CommercialArea, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div><br />
                    <div class="">
                        @Html.LabelFor(model => model.ResidentialArea, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ResidentialArea, new { htmlAttributes = new { @class = "form-control", @placeholder = "Residential Area" } })
                            @Html.ValidationMessageFor(model => model.ResidentialArea, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="">
                        @Html.LabelFor(model => model.NoOfFloors, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.NoOfFloors, new { htmlAttributes = new { @class = "form-control", @placeholder = "No of Floors" } })
                            @Html.ValidationMessageFor(model => model.NoOfFloors, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div><br />
                    <div class="">
                        @Html.LabelFor(model => model.PropertyOwnerName, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.PropertyOwnerName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Property Owner Name" } })
                            @Html.ValidationMessageFor(model => model.PropertyOwnerName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="">
                        @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact Number" } })
                            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div><br />
                    <div class="">
                        @Html.LabelFor(model => model.SellingPrice, htmlAttributes: new { @class = "col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.SellingPrice, new { htmlAttributes = new { @class = "form-control", @placeholder = "Selling Price" } })
                            @Html.ValidationMessageFor(model => model.SellingPrice, "", new { @class = "text-danger" })
                        </div>

                        <div class="">
                            @Html.LabelFor(model => model.CurrencyId, htmlAttributes: new { @class = "col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("CurrencyId", (IEnumerable<SelectListItem>)ViewBag.CurrencyId, "Select Currency ", new { @class = "form-control select" })
                                @Html.ValidationMessageFor(model => model.CurrencyId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="">


                        </div>
                        <div class="form-group"></div><div class="form-group"></div>
                        <div class="form-group">

                            <input type="file" style="display:none" id="images" name="images" multiple>
                            <div style="margin-left:-10px" class="col-lg-12">
                                <div class="col-lg-10">
                                    <div onclick="$('#images').trigger('click')" class="btn btn-primary btn-sm float-left">
                                        <span>Choose files</span>
                                    </div>
                                    <input class="form-control" type="text" id="text" disabled placeholder="Upload one or images">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">

                            </div>
                        </div>
                    </div>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-offset-6 col-md-2">
                                <input type="submit" value="Add" class="btn btn-primary btn-block btn-flat" />

                            </div>
                            <div class=" col-md-2">
                                <input type="button" id="SavenAddNew" value="Save and Add New" class="btn btn-primary btn-block btn-flat" />

                            </div>
                            <div class="col-md-2">
                                <input type="button" onclick="window.location='/PropertyMasters/Index'" value="Back to list" class="btn btn-danger btn-block btn-flat" />
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>

<script>
    function rtrim(str) {
        return str.replace(/\,$/, '');
    }
    $(document).ready(function () {
        //   $.noConflict();
        $('#images').change(function () {
            var i;
            var names = '';
            for (i = 0; i < $('#images')[0].files.length; ++i) {
                names += $('#images')[0].files[i].name + "  ,  ";
            }
            $('#text').val('')
            $('#text').val(rtrim(names));
        })
    })
</script>
<script language="javascript" type="text/javascript">
    function GetCity() {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#City").html(procemessage).show();
        var url = "/PropertyMasters/GetCityByCountryId";

        $.ajax({
            url: url,
            data: { CountryId: $('#Country').val() },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>Select City</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#City").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }

    function GetArea() {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#Area").html(procemessage).show();
        var url = "/PropertyMasters/GetAreaByCityId";

        $.ajax({
            url: url,
            data: { CityID: $('#City').val() },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>Select Areas</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#Area").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>