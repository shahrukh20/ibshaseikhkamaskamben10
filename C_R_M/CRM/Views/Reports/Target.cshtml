@model CustomerManagementSystem.BLL.ViewModels.ReportsViewModel.UnAssignedReportsViewModel
@using CRM.Models;
@{
    /**/
}
<script>
    function GetSalesmen() {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#SalemanId").html(procemessage).show();
        var url = "/Reports/Getsalesmen";

        $.ajax({
            url: url,
            data: { ManagerID: $('#ManagerId').val() },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>Select Salesmen</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#SalemanId").html(markup).show();
            },
            error: function (reponse) {
               // alert("error : " + reponse);
            }
        });

    }
    $(document).ready(function () {

        GetSalesmen();
    });
</script>
<h1>Target Report</h1>
<form action="/Reports/target" method="post">
    <div id="content">
        <div id="content">

            <div class="box box-danger">
                <div class="box-header with-border">
                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @{
                            UserType usrtype = new UserType();
                            usrtype = (UserType)ViewBag.UserType;
                        }
                        @{
                            if (usrtype.UserName == "admin")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ManagerId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <select onchange="GetSalesmen()" class="form-control select No-Validate" id="ManagerId" name="ManagerId" required>
                                            @{
                                                foreach (var item in (IEnumerable<SelectListItem>)ViewBag.Manager)
                                                {
                                                    if (item.Selected)
                                                    {
                                                        <option value="@item.Value" selected>@item.Text</option>}
                                                    else
                                                    {
                                                        <option value="@item.Value">@item.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                        @*@Html.EditorFor(model => model.ManagerId, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SalemanId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <select class="form-control select No-Validate" id="SalemanId" name="SalemanId">
                                            @{
                                                foreach (var item in (IEnumerable<SelectListItem>)ViewBag.Salesman)
                                                {
                                                    if (item.Selected)
                                                    {
                                                        <option value="@item.Value" selected>@item.Text</option>}
                                                    else
                                                    {
                                                        <option value="@item.Value">@item.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                        @*@Html.EditorFor(model => model.SalemanId, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.SalemanId, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            }
                            else if (usrtype.Type == "Manager")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ManagerId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <input type="hidden" id="ManagerId" name="ManagerId" value="@usrtype.UserID" />
                                        <input disabled type="text" value="@usrtype.UserName" class="form-control" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SalemanId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">

                                        <select class="form-control select No-Validate" id="SalemanId" name="SalemanId">
                                            @{
                                                foreach (var item in (IEnumerable<SelectListItem>)ViewBag.Salesman)
                                                {
                                                    if (item.Selected)
                                                    {
                                                        <option value="@item.Value" selected>@item.Text</option>}
                                                    else
                                                    {
                                                        <option value="@item.Value">@item.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                        @*@Html.EditorFor(model => model.SalemanId, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.SalemanId, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                            }
                            else
                            {
                                <div class="form-group">

                                    @Html.LabelFor(model => model.SalemanId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <input type="hidden" id="SalemanId" name="SalemanId" value="@usrtype.UserID" />
                                        <input disabled type="text" value="@usrtype.UserName" class="form-control" />
                                    </div>
                                </div>
                            }
                        }


                        <div class="form-group">
                            @Html.LabelFor(model => model.SalemanCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select class="form-control select No-Validate" id="SalemanCategoryId" name="SalemanCategoryId">
                                    @{
                                        foreach (var item in (IEnumerable<SelectListItem>)ViewBag.SalesmanCategory)
                                        {
                                            if (item.Selected)
                                            {
                                                <option value="@item.Value" selected>@item.Text</option>}
                                            else
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @*@Html.EditorFor(model => model.SalemanCategoryId, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.SalemanCategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.TargetId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select class="form-control select No-Validate" id="TargetId" name="TargetId">
                                    @{
                                        foreach (var item in (IEnumerable<SelectListItem>)ViewBag.Targets)
                                        {
                                            if (item.Selected)
                                            {
                                                <option value="@item.Value" selected>@item.Text</option>}
                                            else
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                @*@Html.EditorFor(model => model.LeadId, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.TargetId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="button" value="Generate" onclick="GenerateReport();" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    function GenerateReport() {
        if ($("#logoutForm").valid()) {
            var str = $("#logoutForm").serialize();
            $.ajax({
                type: "POST",
                url: "../Reports/UnAssignedLeadLoad",
                dataType: "JSON",
                data: { str: str },
                async: false,
                success: function (data) {
                    var base_url = window.location.origin;
                    window.open(base_url + '/WebForms/ReportViwer.aspx', '_blank');
                },
                error: function (dar) { }
            })
        }
    }
</script>
